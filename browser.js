// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var e,r;e=this,r=function(){"use strict";var e="function"==typeof Object.defineProperty?Object.defineProperty:null,r=Object.defineProperty,t=Object.prototype,n=t.toString,o=t.__defineGetter__,i=t.__defineSetter__,u=t.__lookupGetter__,a=t.__lookupSetter__,f=function(){try{return e({},"x",{}),!0}catch(e){return!1}}()?r:function(e,r,f){var l,c,p,_;if("object"!=typeof e||null===e||"[object Array]"===n.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof f||null===f||"[object Array]"===n.call(f))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+f+"`.");if((c="value"in f)&&(u.call(e,r)||a.call(e,r)?(l=e.__proto__,e.__proto__=t,delete e[r],e[r]=f.value,e.__proto__=l):e[r]=f.value),p="get"in f,_="set"in f,c&&(p||_))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&o&&o.call(e,r,f.get),_&&i&&i.call(e,r,f.set),e};function l(e,r,t){f(e,r,{configurable:!1,enumerable:!1,writable:!1,value:t})}var c=Math.floor;function p(e,r,t,n,o){var i,u,a,f,l,_,d,s,y,b,v,m,j;if(e<=0)return 0;if(1===e||0===n)return r+t[o];if(i=o,e<8){for(v=0,j=0;j<e;j++)v+=r+t[i],i+=n;return v}if(e<=128){for(u=r+t[i],a=r+t[i+n],f=r+t[i+2*n],l=r+t[i+3*n],_=r+t[i+4*n],d=r+t[i+5*n],s=r+t[i+6*n],y=r+t[i+7*n],i+=8*n,b=e%8,j=8;j<e-b;j+=8)u+=r+t[i],a+=r+t[i+n],f+=r+t[i+2*n],l+=r+t[i+3*n],_+=r+t[i+4*n],d+=r+t[i+5*n],s+=r+t[i+6*n],y+=r+t[i+7*n],i+=8*n;for(v=u+a+(f+l)+(_+d+(s+y));j<e;j++)v+=r+t[i],i+=n;return v}return m=c(e/2),p(m-=m%8,r,t,n,i)+p(e-m,r,t,n,i+m*n)}function _(e,r,t,n){var o,i,u;if(e<=0)return 0;if(1===e||0===n)return r+t[0];if(o=n<0?(1-e)*n:0,e<8){for(i=0,u=0;u<e;u++)i+=r+t[o],o+=n;return i}return p(e,r,t,n,o)}function d(e,r,t,n){return _(e,r,t,n)}return l(_,"ndarray",p),l(d,"ndarray",(function(e,r,t,n,o){return p(e,r,t,n,o)})),d},"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):(e="undefined"!=typeof globalThis?globalThis:e||self).dsapxsum=r();
//# sourceMappingURL=browser.js.map
